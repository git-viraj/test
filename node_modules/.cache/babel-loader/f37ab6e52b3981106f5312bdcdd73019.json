{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deshm\\\\React\\\\test\\\\src\\\\Components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(prop) {\n  _s();\n\n  const [day, setDays] = useState(0);\n  const [hr, setHr] = useState(0);\n  const [min, setMin] = useState(0);\n  const [sec, setSec] = useState(0);\n  const [bday, setBday] = useState(0);\n  var myfunc = setInterval(function () {\n    var countDownDate1 = new Date(prop.dob).getTime();\n    var now = new Date().getTime();\n    var timeleft = countDownDate1 - now;\n    var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var date = new Date(prop.dob).getDate();\n    date = date + \" \" + month[new Date(prop.dob).getMonth()];\n    setBday(bday => date);\n    console.log(new Date(prop.dob)); // Calculating the days, hours, minutes and seconds left\n\n    var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n    var hours = Math.floor(timeleft % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    var minutes = Math.floor(timeleft % (1000 * 60 * 60) / (1000 * 60));\n    var seconds = Math.floor(timeleft % (1000 * 60) / 1000);\n    setDays(day => days);\n    setHr(hr => hours);\n    setMin(min => minutes);\n    setSec(sec => seconds);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: prop.link,\n        style: {\n          height: \"20rem\"\n        },\n        className: \"card-img-top\",\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [prop.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Birth-Day : \", bday]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Count down :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 49\n          }, this), \" \", day, \" Ds \", hr, \" Hs \", min, \" Ms \", sec, \" Ss\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"btn btn-primary\",\n          children: \"Go to Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Card, \"9bg6zTaKRT1Ayoy8GfTaZtMH76Y=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/deshm/React/test/src/Components/Card.js"],"names":["useState","React","Card","prop","day","setDays","hr","setHr","min","setMin","sec","setSec","bday","setBday","myfunc","setInterval","countDownDate1","Date","dob","getTime","now","timeleft","month","date","getDate","getMonth","console","log","days","Math","floor","hours","minutes","seconds","width","link","height","name"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\r\nimport React  from 'react'\r\n\r\n\r\n\r\nexport default function Card(prop) {\r\n    const [day, setDays] = useState(0);\r\n    const [hr, setHr] = useState(0);\r\n    const [min, setMin] = useState(0);\r\n    const [sec, setSec] = useState(0);\r\n    const [bday, setBday] = useState(0);\r\n    var myfunc = setInterval(function() {\r\n        var countDownDate1 =new Date(prop.dob).getTime()\r\n        var now = new Date().getTime();\r\n        var timeleft = countDownDate1 - now;\r\n        \r\n    \r\n\r\n        var month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n        var date=new Date(prop.dob).getDate()\r\n        date=date+\" \"+month[new Date(prop.dob).getMonth()]\r\n        setBday(bday=>date)\r\n        console.log(new Date(prop.dob))\r\n    \r\n        // Calculating the days, hours, minutes and seconds left\r\n        var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\r\n        setDays(day=>days)\r\n        setHr(hr=>hours)\r\n        setMin(min=>minutes)\r\n        setSec(sec=>seconds)\r\n\r\n    },1000)\r\n  return (\r\n\r\n<div className=\"col-md-3\">\r\n\r\n<div className=\"card\" style={{width: \"18rem\"}}>\r\n  <img src={prop.link} style={{height: \"20rem\"}} className=\"card-img-top\" alt=\"...\"/>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{prop.name} </h5>\r\n    <p className=\"card-text\">Birth-Day : {bday}</p>\r\n    <p className=\"card-text\"><b>Count down :</b><br/> {day} Ds {hr} Hs {min} Ms {sec} Ss</p>\r\n    <a href=\"#\" className=\"btn btn-primary\">Go to Profile</a>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n  );} \r\n\r\n"]},"metadata":{},"sourceType":"module"}